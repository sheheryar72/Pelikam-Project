#pragma checksum "C:\Users\sheharyar.izhar\Desktop\dotnet_work\freelancing\Pelikan_Project\Pelikan_Project\Views\Operator\Login.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0e8b415037e03124731a6c21d676f773b6e67828"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Operator_Login), @"mvc.1.0.view", @"/Views/Operator/Login.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\sheharyar.izhar\Desktop\dotnet_work\freelancing\Pelikan_Project\Pelikan_Project\Views\_ViewImports.cshtml"
using Pelikan_Project;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\sheharyar.izhar\Desktop\dotnet_work\freelancing\Pelikan_Project\Pelikan_Project\Views\_ViewImports.cshtml"
using Pelikan_Project.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0e8b415037e03124731a6c21d676f773b6e67828", @"/Views/Operator/Login.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"537de43834effe56a6617d14c2c5463ffc072286", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Operator_Login : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<section class=""vh-100 gradient-custom"">
    <div class=""container py-5 h-100"">
        <div class=""row d-flex justify-content-center align-items-center h-100"">
            <div class=""col-12 col-md-8 col-lg-6 col-xl-5"">
                <div class=""card bg-dark text-white"" style=""border-radius: 1rem;"">
                    <div class=""card-body p-5 text-center"">

                        <div class=""mb-md-5 mt-md-4 pb-5"">

                            <h2 class=""fw-bold mb-2 text-uppercase"">Login</h2>
                            <p class=""text-white-50 mb-5"">Please enter your login and password!</p>

                            <div data-mdb-input-init class=""form-outline form-white mb-4"">
                                <input type=""number"" id=""OperatorID"" class=""form-control form-control-lg"" placeholder=""Operator ID"" />
                                <label class=""form-label"" for=""typeEmailX"">Operator ID</label>
                            </div>

                            <div data-mdb-inp");
            WriteLiteral(@"ut-init class=""form-outline form-white mb-4"">
                                <input type=""password"" id=""Password"" class=""form-control form-control-lg"" placeholder=""Password"" />
                                <label class=""form-label"" for=""typePasswordX"">Password</label>
                            </div>

");
            WriteLiteral(@"
                            <button data-mdb-button-init data-mdb-ripple-init class=""btn btn-outline-light btn-lg px-5"" id=""login_btn"">Login</button>

                        </div>

                        <div>
                            <p class=""mb-0"">
                                Don't have an account? <a href=""/Operator/Register"" class=""text-white-50 fw-bold"">Register</a>
                            </p>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>

    document.addEventListener('DOMContentLoaded', function () {
        const login_btn = document.querySelector('#login_btn');

        login_btn.addEventListener('click', function (event) {
            event.preventDefault();

            const OperatorID = document.getElementById('OperatorID').value;
            const password = document.getElementById('Password').value;

            console.log('OperatorID: ', OperatorI");
            WriteLiteral(@"D)
            console.log('password: ', password)

            if (OperatorID != '' && password != '') {

                //fetch('/Operator/AuthenticateOperator', {
                //    method: 'POST',
                //    headers: {
                //        'Content-Type': 'application/json'
                //    },
                //    body: JSON.stringify({ Department: Department, Password: password })
                //}).then(response => {
                //    console.log('response: ', response)
                //    console.log('response json: ', response.json())
                //    if (response.operatorID != null) {
                //        localStorage.setItem(""OperatorID"", response.operatorID)
                //        alert(""Successfully LoggedIn!"")
                //        window.location.href = '/Home/Index'
                //        } else {
                //            alert(""Invalid Department or password!"")
                //            throw new Error('Failed t");
            WriteLiteral(@"o authenticate');
                //        }
                //    })
                //    .then(data => {
                //        // Handle successful authentication (e.g., redirect to another page)
                //        console.log('Authentication successful:', data);
                //    })
                //    .catch(error => {
                //        // Handle authentication error (e.g., display error message)
                //        console.error('Authentication error:', error);
                //    });

                $.post({
                    url: `/Operator/AuthenticateOperator`,
                    contentType: 'application/json',
                    data: JSON.stringify({
                        OperatorID: OperatorID, Password: password
                    }),
                    dataType: 'json',
                    success: function (response) {
                        console.log('respponse: ', response)
                        if(response.status == 400){");
            WriteLiteral(@"
                            alert(""Invalid Department or password!"")
                        }
                        if (response.status == 200) {
                            localStorage.setItem(""OperatorID"", response.data.operatorID)
                            alert(""Successfully LoggedIn!"")
                            window.location.href = '/Home/Index'
                        }
                    },
                    error: function (error) {
                        console.log(error);
                    }
                });


            }else{
                alert(""Please add Department and password"")
            }


            

        });
    });


</script>



");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
